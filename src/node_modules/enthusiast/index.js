import cookie from 'cookie';
import parser from 'accept-language-parser';

const defaultSettings = {
	cookieMaxAge: 2628000,
	cookieName: '__enthusiast_locale',
	defaultLocale: 'en',
	excludeDocuments: true,
	excludedRoutes: [],
	localeParameterIndex: 1,
	locales: ['en']
};

const DOCUMENT_REGEX = /^([^.?#@]+)?([?#](.+)?)?$/;

export default function enthusiast(settings = defaultSettings) {
	settings = { ...defaultSettings, ...settings };

	return (req, res, next) => {
		const path = req.path;
		const isDocument = DOCUMENT_REGEX.test(req.originalUrl);

		if (settings.excludeDocuments && isDocument) {
			return next();
		}

		for (const route of settings.excludedRoutes) {
			if (path.startsWith(route)) {
				return next();
			}
		}

		const cookies = cookie.parse(req.headers.cookie || '');
		const params = path.split('/');

		let requestLocale = settings.defaultLocale;
		let pathLocale = (path.length > 1) ? params[settings.localeParameterIndex] : null;

		if (path.length <= 1 || !!pathLocale && !settings.locales.includes(pathLocale)) {
			requestLocale = parser.pick(settings.locales, req.headers['accept-language'], { loose: true });

			if (!!cookies[settings.cookieName]) {
				for (const locale of settings.locales) {
					if (locale === cookies[settings.cookieName]) {
						requestLocale = locale;
						break;
					}
				}
			}

			req.locale = requestLocale;

			if (!cookies[settings.cookieName] || settings.cookieName !== requestLocale) {
				const localeCookie = cookie.serialize(settings.cookieName, requestLocale, {
					maxAge: settings.cookieMaxAge
				});
				res.setHeader('Set-Cookie', localeCookie);
			}

			return next();
		}

		if (!pathLocale.match('^[a-z]{2}(-[A-Z]{2})*$') || !settings.locales.includes(pathLocale)) {
			pathLocale = settings.defaultLocale;
		}

		requestLocale = pathLocale;
		req.locale = requestLocale;

		if (!cookies[settings.cookieName] || cookies[settings.cookieName] !== requestLocale) {
			const localeCookie = cookie.serialize(settings.cookieName, requestLocale, {
				maxAge: settings.cookieMaxAge
			});
			res.setHeader('Set-Cookie', localeCookie);
		}

		return next();
	};
}